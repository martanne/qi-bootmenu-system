#!/bin/sh

case "$1" in
    start)
	# gathers or create necessary host and device mac addresses for 
	# the g_ether module. If the g_ether module options file exists, 
	# we have nothing to do.

	if [ ! -e /etc/modprobe.d/g_ether.conf ] ; then

		# Gather up all g_ether parameters passed in on the kernel 
		# command line, and make sure to pass them to the module.

		# Begin by searching the command line for the host and dev addrs
		da=`sed -n -e 's|.*g_ether\.dev_addr\=\(..:..:..:..:..:..\).*|\1|p' /proc/cmdline` 
		ha=`sed -n -e 's|.*g_ether\.host_addr\=\(..:..:..:..:..:..\).*|\1|p' /proc/cmdline` 

		# If have a device address, now we need to sort out the host address.
		# If it is unspecified, or if it is the same as the device address 
		# (Qi does this), compute a new address by just incrementing the device
		# address.

		if [ -n "$da" -a -z "$ha" -o "$da" = "$ha" ]; then

			# We need to compute a new address - split the device 
			# address into two part, and increment the second part.
			pfx=`echo "$da" | sed -n -e 's|\(..:..:..:\)..:..:..|\1|p'`
			i=`echo "$da" | sed -n -e 's|..:..:..:\(..\):\(..\):\(..\)|0x\1\2\3|p'`

			# Now increment the mac addr
			i=$(printf %06x $(($i+1)))

			# And glue the parts back together again.
			i=`echo "$i" | sed -n -e 's|\(..\)\(..\)\(..\)|\1:\2:\3|p'`

			# Assign the computed host address, if this all worked out.
			[ -n "$i" -a -n "$pfx" ] && ha=$pfx$i
		fi

		[ -n "$da" ] && daddr="dev_addr=$da"
		[ -n "$ha" ] && haddr="host_addr=$ha"

		[ -d /etc/modprobe.d ] || mkdir /etc/modprobe.d
		echo "options g_ether $daddr $haddr" >/etc/modprobe.d/g_ether.conf
	fi

	# load g_ether module if it isn't yet
	lsmod | grep g_ether >/dev/null 2>&1 || modprobe g_ether 2>/dev/null && sleep 1

	ip link set usb0 up
	ip addr add 192.168.0.202/24 dev usb0
	ip route add default via 192.168.0.200

	echo nameserver 208.67.222.222 > /etc/resolv.conf
	echo nameserver 208.67.220.220 >> /etc/resolv.conf

	;;
    stop)
	ip link set usb0 down
	;;
    restart)
	$0 stop
	$0 start
	;;
    *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
	;;
esac

exit 0
